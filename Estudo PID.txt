Estudo do PID:

Informações sobre o carro: (Retiradas do roboton.io)

Engine Torque: 

	-min: 0Nm, max: 5000Nm. 
	- Torque é divido nas rodas de trás, raio de 0.4m

Steering Angle:
	- min: -pi/4 rad, max: pi/4 rad.
	- Positivo -> Direita, Negativo -> Esquerda
	- Pi/4 = 0.785 aproximadamente


3 variaveis de controle: Proporcionais, Integrais e Derivativas. (Informações tiradas do site do Alex)


Proporcionais:
	- Se Kp for pequeno implica em curvas com viradas leves, seguindo mais o caminho, ir reto
	- Se Kp for grande implica em curvas com viradas bruscas (F Detran), oscila quando tiver na linha reta
	- Se Kp muito grande pode inclusive sair da linha
	- Alex usou na aula
	- P = erro -> Kp*P

Integrais:
	- Logica de integral de riemman soma os erros.
	- Usa o histórico de erros
	- Se erro = 0, o I não aumenta mais
	-  Diminui oscilação do robô
	- I += erro, Ki*I
	- Um Ki alto aumenta a oscilação do robô

Derivativas:
	- Calcula erro atual e anterior
	- Curvas mt acentuadas terão mudanças mais rapidas, assim D é maior
	- Quanto maior D, ou seja, a mudança brusca no erro, melhor o controle/menor oscilação
	- Kd baixo -> Talvez não faça diferença
	- Kd alto -> Erro no progama inteiro 
	- D = erro - ult_erro //ult_erro é o ultimo erro

Testes (const EngineTorque = 1000):

Kp = 0.2, Ki = 0.03, Kd = 0.6. PV = 12.43, MV = 7.20 (Base)
Kp = 0.2, Ki = 0.04, Kd = 0.6. PV = 12.45, MV = 7.17 (Final da curva da uma mexidinha)
Kp = 0.2, Ki = 0.04, Kd = 0.65. PV = 12.53, MV = 7.28 (Ganha menos velocidade nas curvas)
Kp = 0.2, Ki = 0.04, Kd = 0.7. PV = 12.56, MV = 7.26 (Aumentar o Kd não vai ajudar em velocidade e mudar pouco não vai ajudar, tem que mudar de 0.1)
Kp = 0.2, Ki = 0.04, Kd = 0.5. PV = 12.35, MV = 7.14 (Ficou mais rapido, curva mais aberta)
Kp = 0.2, Ki = 0.04, Kd = 0.4. PV = 12.29, MV = 7.10 (Ficou mais rapido)
Kp = 0.2, Ki = 0.04, Kd = 0.35. PV = 12.32, MV = 7.12 (Começa a ser menos preciso e perder velocidade)



Testes (velocidade variavel, 1500 e 5000): 
Kp = 0.2, Ki = 0.04, Kd = 0.4, AnglePar = 0.01 PV = -----, MV = ------ (Não completa)
Kp = 0.4, Ki = 0.04, Kd = 0.4, AnglePar = 0.01 PV = 9.17 , MV = 7.14 (Só faz 2 voltas)
Kp = 0.5, Ki = 0.04, Kd = 0.4, AnglePar = 0.01 PV = 8.99, MV = 7.33 (Mais lento doq constante) 
Kp = 0.4, Ki = 0.04, Kd = 0.4, AnglePar = 0.015 PV = 8.40, MV = 7.07 (Só faz 2 voltas)


Testes (velocidade variavel, 1500 e 4000):
Kp = 0.43, Ki = 0.04, Kd = 0.4, AnglePar = 0.015 PV = 9.10, MV = 6.96 (Só faz 3 voltas)
Kp = 0.43, Ki = 0.04, Kd = 0.4, AnglePar = 0.011 PV = 9.01, MV = 7.07 (Só faz 4 voltas)
Kp = 0.43, Ki = 0.039, Kd = 0.41, AnglePar = 0.011 PV = 9.20, MV = 7.12 

Ideia: Fazer uma função tal que a enginetorque não vá de 1500 para 4000 de uma vez, progessão linear.

Testes Ideia:
Kp = 0.43, Ki = 0.039, Kd = 0.41, AnglePar = 0.011 PV = 10.11, MV = 6.96 (Só faz 3 voltas, mas a ideia funciona)
Kp = 0.43, Ki = 0.039, Kd = 0.41, AnglePar = 0.015 PV = 10.08, MV = 6.94 (Mudar as constantes talvez resolva problema de voar)
Kp = 0.43, Ki = 0.0395, Kd = 0.4, AnglePar = 0.015 PV = 10.03, MV = 6.98 (Da voltas infinitas)
Kp = 0.43, Ki = 0.04, Kd = 0.4, AnglePar = 0.02 PV = 9.10, MV = 7.01 (Chega até a fazer mais rapido depois da terceira volta)
Kp = 0.43, Ki = 0.04, Kd = 0.41, AnglePar = 0.017 PV = 9.60, MV = 6.99 (Esse não voa)
Kp = 0.43, Ki = 0.04, Kd = 0.4, AnglePar = 0.0168 PV = 9.12, MV = 7.04 (Perde um pouco de velocidade)

Observações:
Kd = 0.4 parece ser o ideal para conseguir voltas mais rapidas
Kp influencia muito a velocidade, ao mesmo tempo ajuda muito a ficar na pista
Ki qualquer mudança minuscula já muda tudo
